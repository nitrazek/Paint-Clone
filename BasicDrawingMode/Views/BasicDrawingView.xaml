<UserControl x:Class="Paint_Clone.BasicDrawingMode.Views.BasicDrawingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vms="clr-namespace:Paint_Clone.BasicDrawingMode.ViewModels"
             xmlns:enums="clr-namespace:Paint_Clone.BasicDrawingMode.Enums"
             xmlns:local="clr-namespace:Paint_Clone.BasicDrawingMode.Views"
             mc:Ignorable="d" 
             Background="White"
             d:DesignHeight="675" d:DesignWidth="1280"
             d:DataContext="{d:DesignInstance vms:BasicDrawingViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Paint-Clone;component/Styles/ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
      
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="210"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Background="#36393e" Grid.Column="0" Panel.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="70"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Button for drawing a triangle -->
            <Button Grid.Column="0" Margin="4" FontSize="30" Content="△" Command="{Binding ChangeDrawingModeCommand}" CommandParameter="{x:Static enums:DrawingModes.Triangle}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDrawingMode}" Value="{x:Static enums:DrawingModes.Triangle}">
                                <Setter Property="Background" Value="LightGreen" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Button for drawing a rectangle -->
            <Button Grid.Column="1" Margin="4" FontSize="25" Content="▯" Command="{Binding ChangeDrawingModeCommand}" CommandParameter="{x:Static enums:DrawingModes.Square}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDrawingMode}" Value="{x:Static enums:DrawingModes.Square}">
                                <Setter Property="Background" Value="LightGreen" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Button for drawing an ellipse -->
            <Button Grid.Column="2" Margin="4" FontSize="30" Content="○" Command="{Binding ChangeDrawingModeCommand}" CommandParameter="{x:Static enums:DrawingModes.Elipse}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDrawingMode}" Value="{x:Static enums:DrawingModes.Elipse}">
                                <Setter Property="Background" Value="LightGreen" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Button for drawing a straight line -->
            <Button Grid.Column="0" Grid.Row="1" Margin="4" FontSize="30" Content="/" Command="{Binding ChangeDrawingModeCommand}" CommandParameter="{x:Static enums:DrawingModes.StraightLine}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDrawingMode}" Value="{x:Static enums:DrawingModes.StraightLine}">
                                <Setter Property="Background" Value="LightGreen" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Button for freehand drawing -->
            <Button Grid.Column="1" Grid.Row="1" Margin="4" FontSize="30" Content="✎" Command="{Binding ChangeDrawingModeCommand}" CommandParameter="{x:Static enums:DrawingModes.FreeHand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDrawingMode}" Value="{x:Static enums:DrawingModes.FreeHand}">
                                <Setter Property="Background" Value="LightGreen" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Button for adding text -->
            <Button Grid.Column="2" Grid.Row="1" Margin="4" FontSize="30" Content="A" Command="{Binding ChangeDrawingModeCommand}" CommandParameter="{x:Static enums:DrawingModes.Text}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDrawingMode}" Value="{x:Static enums:DrawingModes.Text}">
                                <Setter Property="Background" Value="LightGreen" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <StackPanel x:Name="TextStackPanel" Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="3"  Margin="4,8,4,4" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDrawingMode}" Value="{x:Static enums:DrawingModes.Text}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <TextBlock Foreground="#ffca4f" FontWeight="Bold" FontSize="13" Margin="0,0,10,0">Tekst:</TextBlock>
                <TextBox Width="130" Text="{Binding TextField, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.ColumnSpan="3" Margin="4,8,4,4" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Margin="0,0,7,0" VerticalAlignment="Center" Foreground="#ffca4f" FontWeight="Bold" FontSize="13">Size:</TextBlock>
                <Button Content="▲" Width="30" Margin="5" Command="{Binding IncreaseBrushSizeCommand}" Style="{StaticResource DefaultButtonStyle}"/>
                <TextBlock Width="50" TextAlignment="Center" Foreground="#ffca4f" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="15" Text="{Binding BrushSize}"/>
                <Button Content="▼" Width="30" Margin="5" Command="{Binding DecreaseBrushSizeCommand}" Style="{StaticResource DefaultButtonStyle}"/>
            </StackPanel>
            <Button Grid.Row="4" Grid.ColumnSpan="3" FontSize="18" Height="40" Margin="4,8,4,4" VerticalAlignment="Center" Click="SaveButton_Click" Style="{StaticResource DefaultButtonStyle}">Save</Button>
            <Button Grid.Row="5" Grid.ColumnSpan="3" FontSize="18" Height="40" Margin="4,4,4,8" VerticalAlignment="Center" Click="ClearButton_Click" Style="{StaticResource DefaultButtonStyle}">Clear</Button>
        </Grid>
        <Grid Grid.Column="1" Panel.ZIndex="0">
            <Canvas Name="PaintSurface" MouseLeftButtonDown="PaintSurface_MouseLeftButtonDown" MouseLeftButtonUp="PaintSurface_MouseLeftButtonUp" MouseMove="PaintSurface_MouseMove">
                <Canvas.Background>
                    <SolidColorBrush Color="White" Opacity="0"/>
                </Canvas.Background>
            </Canvas>
        </Grid>
    </Grid>
</UserControl>
